version: '3.8'

services:
  gradio-app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: ai-resources-gradio-prod
    ports:
      - "80:7860"
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - GRADIO_DEBUG=false
      - LOG_LEVEL=INFO
    volumes:
      - ../exports:/app/exports
      - ../logs:/app/logs
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      mysql:
        condition: service_healthy
    restart: always
    networks:
      - ai-resources-network
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  mysql:
    image: mysql:8.0
    container_name: ai-resources-mysql-prod
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ../sql:/docker-entrypoint-initdb.d:ro
      - ./mysql.conf:/etc/mysql/conf.d/custom.cnf:ro
    restart: always
    networks:
      - ai-resources-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G

  nginx:
    image: nginx:alpine
    container_name: ai-resources-nginx
    ports:
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - gradio-app
    restart: always
    networks:
      - ai-resources-network

volumes:
  mysql_data:
    driver: local

networks:
  ai-resources-network:
    driver: bridge